---
import { buildSrcSet } from './buildSrcSet';
import type { ImageProps } from './types';

interface Props extends ImageProps {}

const {
  data,
  pictureClass,
  pictureStyle,
  imgClass,
  imgStyle,
  priority,
  usePlaceholder = true,
  sizes,
  srcSetCandidates = [0.25, 0.5, 0.75, 1, 1.5, 2, 3, 4],
  referrerPolicy = 'strict-origin',
} = Astro.props;

const placeholderStyle =
  usePlaceholder && data.base64
    ? {
        backgroundImage: `url("${data.base64}")`,
        backgroundSize: 'cover',
        backgroundRepeat: 'no-repeat',
        backgroundPosition: '50% 50%',
        color: 'transparent',
      }
    : usePlaceholder && data.bgColor
      ? { backgroundColor: data.bgColor ?? undefined, color: 'transparent' }
      : undefined;

const { width } = data;

const height = data.height ?? Math.round(data.aspectRatio ? width / data.aspectRatio : 0);

const sizingStyle = {
  aspectRatio: `${width} / ${height}`,
  width: '100%',
  maxWidth: `${width}px`,
  height: 'auto',
};
---

<picture class={pictureClass} style={pictureStyle} data-datocms-image="true">
  {
    data.webpSrcSet && (
      <source srcset={data.webpSrcSet} sizes={sizes ?? data.sizes ?? null} type="image/webp" />
    )
  }
  <source
    srcset={data.srcSet ?? buildSrcSet(data.src, data.width, srcSetCandidates) ?? null}
    sizes={sizes ?? data.sizes ?? null}
  />
  {
    data.src && (
      <img
        src={data.src}
        alt={data.alt ?? ''}
        title={data.title ?? null}
        fetchpriority={priority ? 'high' : undefined}
        loading={priority ? undefined : 'lazy'}
        referrerpolicy={referrerPolicy}
        class={imgClass}
        style={{
          ...placeholderStyle,
          ...sizingStyle,
          ...imgStyle,
        }}
        data-testid="img"
      />
    )
  }
</picture>

<script>
  function removeBackgroundStyles(element: HTMLElement) {
    element.style.backgroundColor = '';
    element.style.backgroundImage = '';
  }

  function setup() {
    for (const pictureEl of [...document.querySelectorAll('picture[data-datocms-image=true]')]) {
      const imgEl = pictureEl.querySelector('img');

      if (!imgEl) {
        return;
      }

      if (imgEl.complete) {
        removeBackgroundStyles(imgEl);
      } else {
        imgEl.addEventListener('load', () => removeBackgroundStyles(imgEl));
      }
    }
  }

  document.addEventListener('DOMContentLoaded', setup);
  document.addEventListener('astro:page-load', setup);

  if (document.readyState === 'complete') {
    setup();
  }
</script>
